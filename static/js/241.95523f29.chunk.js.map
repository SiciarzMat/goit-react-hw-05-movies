{"version":3,"file":"static/js/241.95523f29.chunk.js","mappings":"gNAIMA,EAAkBC,EAAAA,GAAAA,EAAH,sHAORC,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OAAO,SAACH,EAAD,UAAkBG,GAC5B,C,iJCTYC,EAAa,mCAAG,sGACJC,EAAAA,EAAAA,IAAA,kEAHb,qCAEiB,cACrBC,EADqB,OAIrBC,EAAiBD,EAASE,KAAKC,QAJV,kBAMpBF,GANoB,2CAAH,qD,oCCGpBG,EAAgBT,EAAAA,GAAAA,GAAH,qDAkCnB,EA9Ba,WACT,OAAkCU,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAmB,mCAAG,2FACxBN,GAAa,GADW,kBAGQT,IAHR,OAGdgB,EAHc,OAIpBH,EAAUG,GAJU,gDAMpBL,EAAS,KAAMM,SANK,yBAQpBR,GAAa,GARO,4EAAH,qDAWzBM,GACH,GAAE,KAGC,iCACI,SAACT,EAAD,8BACA,SAACY,EAAA,EAAD,CAAYN,OAAQA,IACnBJ,IAAa,SAACW,EAAA,EAAD,IACbT,IAAS,SAACZ,EAAA,EAAD,CAAOC,KAAK,0CAGjC,C,0GCnCKqB,GAAavB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAH,iFAQVyB,EAAazB,EAAAA,GAAAA,GAAH,6DAKHqB,EAAa,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OACrBW,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACF,EAAD,UACGV,EAAOa,KAAI,SAAAC,GAAK,OACf,yBACE,SAACN,EAAD,CACEO,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAFjB,SAGGG,EAAMK,SAJFL,EAAME,GADA,KAWtB,C","sources":["components/Error.js","services/fetchTrending.js","pages/Home.js","pages/MoviesList.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledParagraph = styled.p`\n    display: flex;\n    justify-content: center;\n    font-size: 20px;\n    font-size: bold;\n`\n\nexport const Error = ({ text }) => {\n    return <StyledParagraph>{text}</StyledParagraph>\n};\n\nError.propTypes = {\n    text: PropTypes.string.isRequired,\n}","import axios from 'axios';\n\nconst key = '9ac98fc7f7b54439f7d280280d36743b';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`\n  );\n  const trendingMovies = response.data.results;\n\n  return trendingMovies;\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { fetchTrending } from \"services/fetchTrending\";\nimport { Loader } from \"../components/Loader\";\nimport { Error } from \"../components/Error\";\nimport { MoviesList } from \"./MoviesList\";\n\nconst StyledHeading = styled.h2`\nmargin: 15px 0px 15px 10px;\n`\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movies, setMovies] = useState([])\n\n    useEffect(() => {\n        const handleMoviesRequest = async () => {\n            setIsLoading(true)\n            try {\n                const fetchedMovies = await fetchTrending();\n                setMovies(fetchedMovies);\n            } catch (error) {\n                setError(error.message)\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        handleMoviesRequest()\n    }, [])\n\n    return (\n        <>\n            <StyledHeading>Trending today</StyledHeading>\n            <MoviesList movies={movies} />\n            {isLoading && <Loader />}\n            {error && <Error text=\"An error occurred. Please try again\" />}\n        </>\n    )\n}\n\nexport default Home;","import styled from \"styled-components\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst StyledLink = styled(NavLink)`\n  color: blue;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nconst StyledList = styled.ul`\nmargin-left: 45px;\nline-height: 1.5;`\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}>\n            {movie.title}\n          </StyledLink>\n        </li>\n      ))}\n    </StyledList>\n  )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n}"],"names":["StyledParagraph","styled","Error","text","fetchTrending","axios","response","trendingMovies","data","results","StyledHeading","useState","isLoading","setIsLoading","error","setError","movies","setMovies","useEffect","handleMoviesRequest","fetchedMovies","message","MoviesList","Loader","StyledLink","NavLink","StyledList","location","useLocation","map","movie","to","id","state","from","title"],"sourceRoot":""}