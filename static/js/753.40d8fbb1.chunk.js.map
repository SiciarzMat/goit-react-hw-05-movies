{"version":3,"file":"static/js/753.40d8fbb1.chunk.js","mappings":"mNAIMA,EAAkBC,EAAAA,GAAAA,EAAH,sHAORC,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OAAO,SAACH,EAAD,UAAkBG,GAC5B,C,uKCTYC,EAAa,mCAAG,WAAMC,GAAN,yFACJC,EAAAA,EAAAA,IAAA,4DAHb,mCAGa,kBAC6CD,IAFzC,cACrBE,EADqB,OAIrBC,EAAiBD,EAASE,KAAKC,QAJV,kBAMpBF,GANoB,2CAAH,sD,uCCIpBG,EAAaV,EAAAA,GAAAA,KAAH,mDAGVW,EAAcX,EAAAA,GAAAA,MAAH,gKASXY,EAAoBZ,EAAAA,GAAAA,KAAH,2MAWjBa,EAAmBb,EAAAA,GAAAA,OAAH,qVAsEtB,EAtDe,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAAQkB,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACN,GAAc,OAAVrB,EAAJ,CAEA,IAAMsB,EAAmB,mCAAG,2FACxBR,GAAa,GADW,kBAGQf,EAAcC,GAHtB,OAGduB,EAHc,OAIpBX,EAAUW,GAJU,gDAMpBP,EAAS,KAAMQ,SANK,yBAQpBV,GAAa,GARO,4EAAH,qDAWzBQ,GAb0B,CAc7B,GAAE,CAACtB,IAWJ,OAAQ,iCACJ,UAACM,EAAD,CAAYmB,SAVK,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,EAAgB,CAAEnB,MAAO4B,EAAKE,SAAS9B,MAAM+B,QAC7CH,EAAKI,OACR,EAKG,WACI,SAACzB,EAAD,CACI0B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,KAAK,WAET,UAAC3B,EAAD,CAAkBwB,KAAK,SAAvB,WACI,SAACzB,EAAD,qBADJ,gBAIJ,SAAC6B,EAAA,EAAD,CAAY1B,OAAQA,IACnBE,IAAa,SAACyB,EAAA,EAAD,IACbvB,IAAS,SAAClB,EAAA,EAAD,CAAOC,KAAK,wCACH,IAAlBa,EAAO4B,QAAgBvC,IAAUa,IAAa,SAAChB,EAAA,EAAD,CAAOC,KAAK,+BAGlE,C,+GC/FK0C,GAAa5C,EAAAA,EAAAA,IAAO6C,EAAAA,GAAP7C,CAAH,iFAQV8C,EAAa9C,EAAAA,GAAAA,GAAH,6DAKHyC,EAAa,SAAC,GAAgB,IAAd1B,EAAa,EAAbA,OACrBgC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACF,EAAD,UACG/B,EAAOkC,KAAI,SAAAC,GAAK,OACf,yBACE,SAACN,EAAD,CACEO,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAFjB,SAGGG,EAAMK,SAJFL,EAAME,GADA,KAWtB,C","sources":["components/Error.js","services/fetchSearched.js","pages/Movies.js","pages/MoviesList.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledParagraph = styled.p`\n    display: flex;\n    justify-content: center;\n    font-size: 20px;\n    font-size: bold;\n`\n\nexport const Error = ({ text }) => {\n    return <StyledParagraph>{text}</StyledParagraph>\n};\n\nError.propTypes = {\n    text: PropTypes.string.isRequired,\n}","import axios from 'axios';\n\nconst key = '9ac98fc7f7b54439f7d280280d36743b';\n\nexport const fetchSearched = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`\n  );\n  const searchedMovies = response.data.results;\n\n  return searchedMovies;\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MoviesList } from \"./MoviesList\";\nimport { fetchSearched } from \"services/fetchSearched\";\nimport { Loader } from \"../components/Loader\";\nimport { Error } from \"../components/Error\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst StyledForm = styled.form`\nmargin: 20px 0px 20px 15px;`\n\nconst StyledInput = styled.input`\nmin-width: 200px;\nmax-width: 300px;\n  height: 30px;\n  border: 1px solid rgb(184, 183, 183);\n  outline: none;\n  padding-left: 8px;\n`\n\nconst StyledButtonLabel = styled.span`\nposition: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`\nconst StyledFormButton = styled.button`\n  display: inline-block;\n  height: 30px;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\nborder: 1px solid rgb(155, 154, 154);\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: orange;\n    border-color: orange;\n  }\n`\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n\n    useEffect(() => {\n        if (query === null) return;\n\n        const handleMoviesRequest = async () => {\n            setIsLoading(true)\n            try {\n                const fetchedMovies = await fetchSearched(query);\n                setMovies(fetchedMovies);\n            } catch (error) {\n                setError(error.message)\n            } finally {\n                setIsLoading(false)\n            }\n        };\n        handleMoviesRequest();\n    }, [query])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        setSearchParams({ query: form.elements.query.value });\n        form.reset();\n    }\n\n\n\n    return (<>\n        <StyledForm onSubmit={handleSubmit}>\n            <StyledInput\n                type=\"text\"\n                autocomplete=\"off\"\n                autoFocus\n                name=\"query\"\n            />\n            <StyledFormButton type=\"submit\">\n                <StyledButtonLabel>Search</StyledButtonLabel>Search\n            </StyledFormButton>\n        </StyledForm>\n        <MoviesList movies={movies} />\n        {isLoading && <Loader />}\n        {error && <Error text=\"An error occurred. Please try again\" />}\n        {movies.length === 0 && query && !isLoading && <Error text=\"Nothing found! Try again\" />}\n    </>\n    )\n}\n\nexport default Movies;","import styled from \"styled-components\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst StyledLink = styled(NavLink)`\n  color: blue;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nconst StyledList = styled.ul`\nmargin-left: 45px;\nline-height: 1.5;`\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <StyledLink\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}>\n            {movie.title}\n          </StyledLink>\n        </li>\n      ))}\n    </StyledList>\n  )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n}"],"names":["StyledParagraph","styled","Error","text","fetchSearched","query","axios","response","searchedMovies","data","results","StyledForm","StyledInput","StyledButtonLabel","StyledFormButton","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","handleMoviesRequest","fetchedMovies","message","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","autocomplete","autoFocus","name","MoviesList","Loader","length","StyledLink","NavLink","StyledList","location","useLocation","map","movie","to","id","state","from","title"],"sourceRoot":""}